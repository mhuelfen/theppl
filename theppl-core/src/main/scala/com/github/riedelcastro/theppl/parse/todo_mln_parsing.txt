(see http://alchemy.cs.washington.edu/user-manual/4_2MLN_Syntax.html)
Parsings TODOs:
1) three additional operators: *, + and !
2) hard formula definition by a period (.)
3) formula definition could contain a constant.(not only variables)
4) Alchemy internal predicates and functions

----------------------------------------------------------------------------------------------------------------
+ semantics:
     The + operator makes it possible to learn ``per constant'' weights.
     When a variable in a formula is preceded by +, a separate weight is learned for each formula obtained by grounding
     that variable to one of its values. For example, if the input formula is hasPosition(x,+y),
     a separate weight is learned for the three formulas:

        hasPosition(x,Faculty)
        hasPosition(y,Faculty_adjunct)
        hasPosition(y,Faculty_emeritus)

    If multiple variables are preceded by +, a weight is learned for each combination of their values.
    When there are multiple databases, only those containing the constant generated by the + operator contribute to the weight.

 ----------------------------------------------------------------------------------------------------------------
 !-variable semantics:
    The ! operator allows you to specify variables that have mutually exclusive and exhaustive values.

    For example, if the predicate hasPosition(x, y!) is declared, this means that any person has exactly one position
    (all groundings for this person build one block).

    This constraint is enforced when performing inference and learning:
    it is guaranteed that exactly one grounding per block is true.
    Note that the ! appears after a variable. ! can only be used in a predicate declaration,
    and can be applied to any number of the predicate's variables.